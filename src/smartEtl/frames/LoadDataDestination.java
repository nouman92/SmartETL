/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smartEtl.frames;

import java.sql.Connection;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import smartEtl.config.Configuration;
import smartEtl.config.PropertiesName;
import smartEtl.core.utils;

/**
 *
 * @author nouman
 */
public class LoadDataDestination extends javax.swing.JInternalFrame {

    /**
     * Creates new form LoadDataDestination
     */
    public LoadDataDestination() {
    	super("Load Data ", true,true, true, true);
    }
    public void populateData(){
    	Connection conn = utils.getSourceConnection();
    	ArrayList<String>  data = utils.getTables(conn , Configuration.getAttribute(PropertiesName.srcDB));
    	Object  obj[][] = new Object[ data.size()][2];
    	for( int i = 0 ; i <  data.size() ; i++){
    		obj[i][0] =  data.get(i);
    		obj[i][1] = Boolean.TRUE;
    	}
    	initComponents(obj);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(Object[][] obj) {

        jScrollPane1 = new javax.swing.JScrollPane();
        dataToLoadTable = new javax.swing.JTable();
        loadDataButton = new javax.swing.JButton();
        LoadDataProgressBar = new javax.swing.JProgressBar();

        dataToLoadTable.setModel(new javax.swing.table.DefaultTableModel(
            obj,
            new String [] {
                "Table", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataToLoadTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(dataToLoadTable);
        dataToLoadTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        loadDataButton.setText("Load");
        loadDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDataButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LoadDataProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loadDataButton)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loadDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoadDataProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDataButtonActionPerformed
    	if(utils.checkIfBothDbAreSame()){
    		JOptionPane.showMessageDialog(this, "Error !Both Source and Destination DB Are Same!");
    	}
    	else{
    		int count = dataToLoadTable.getRowCount();
    		if( count > -1){
    			ArrayList<String> dataToLoad = new ArrayList<String>();
    			TableModel model = dataToLoadTable.getModel();
    			for(int i = 0 ; i < count ; i++){
    				Boolean checked = (Boolean) model.getValueAt(i, 1);
    				String tableName = (String) model.getValueAt(i, 0);
    				if(checked){
    					dataToLoad.add(tableName);
    				}
    			}
    			utils.createTable(dataToLoad);
    		}
    		else
    		{
    			JOptionPane.showMessageDialog(this, "Error !No Data To Load");
    		}
    	}
    }//GEN-LAST:event_loadDataButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar LoadDataProgressBar;
    private javax.swing.JTable dataToLoadTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadDataButton;
    // End of variables declaration//GEN-END:variables
}
